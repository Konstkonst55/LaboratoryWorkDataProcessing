The algorithm is rarely used to find a single pattern, but it has significant theoretical importance and is very effective in finding matches of multiple patterns of the same length. For a text of length n and a template of length m, its average and best execution time is O(n) when the hash function is selected correctly (see below), but in the worst case it has an efficiency of O(nm), which is one of the reasons why it is not widely used. For applications in which false positives are allowed during the search, that is, when some of the found occurrences of the pattern may actually not match the pattern, the Rabin-Karp algorithm works in a guaranteed O(n) time and with the appropriate choice of a randomized hash function (see below), the probability of error can be made very small. The algorithm also has a unique feature of finding any of the given k strings of the same length on average (if the hash function is chosen correctly) in O(n) time, regardless of the size of k.